// This file was generated by liblab | https://liblab.com/

using System.Net.Http.Json;
using PostmanClient.Http;
using PostmanClient.Http.Serialization;
using PostmanClient.Models;

namespace PostmanClient.Services;

public class BillingService : BaseService
{
    internal BillingService(HttpClient httpClient)
        : base(httpClient) { }

    /// <summary>Gets Postman billing account details for the given team.</summary>
    public async Task<InvoicesAccountInfo> GetAccountsAsync(
        CancellationToken cancellationToken = default
    )
    {
        var request = new RequestBuilder(HttpMethod.Get, "accounts").Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);
        response.EnsureSuccessStatusCode();

        return await response
                .Content.ReadFromJsonAsync<InvoicesAccountInfo>(
                    _jsonSerializerOptions,
                    cancellationToken
                )
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }

    /// <summary>Gets all invoices for a Postman billing account filtered by the status of the invoice.</summary>
    /// <param name="accountId">The account's ID.</param>
    /// <param name="status">The account's status.</param>
    public async Task<GetAccountInvoices> GetAccountInvoicesAsync(
        string accountId,
        GetAccountInvoicesStatus status,
        CancellationToken cancellationToken = default
    )
    {
        ArgumentNullException.ThrowIfNull(accountId, nameof(accountId));
        ArgumentNullException.ThrowIfNull(status, nameof(status));

        var request = new RequestBuilder(HttpMethod.Get, "accounts/{accountId}/invoices")
            .SetPathParameter("accountId", accountId)
            .SetQueryParameter("status", status.Value)
            .Build();

        var response = await _httpClient
            .SendAsync(request, cancellationToken)
            .ConfigureAwait(false);
        response.EnsureSuccessStatusCode();

        return await response
                .Content.ReadFromJsonAsync<GetAccountInvoices>(
                    _jsonSerializerOptions,
                    cancellationToken
                )
                .ConfigureAwait(false) ?? throw new Exception("Failed to deserialize response.");
    }
}
