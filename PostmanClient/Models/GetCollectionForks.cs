// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

public record GetCollectionForks(
    /// <value>A list of the collection's forks.</value>
    [property:
        JsonPropertyName("data"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<GetCollectionForks.GetCollectionForksData>? Data = null,
    /// <value>The response's meta information for paginated results.</value>
    [property:
        JsonPropertyName("meta"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetCollectionForks.GetCollectionForksMeta? Meta = null
)
{
    /// <summary>Information about the forked collection.</summary>
    public record GetCollectionForksData(
        /// <value>The date and time at which the fork was created.</value>
        [property:
            JsonPropertyName("createdAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? CreatedAt = null,
        /// <value>The user who created the collection fork.</value>
        [property:
            JsonPropertyName("createdBy"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? CreatedBy = null,
        /// <value>The forked collection's ID.</value>
        [property:
            JsonPropertyName("forkId"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? ForkId = null,
        /// <value>The forked collection's label.</value>
        [property:
            JsonPropertyName("forkName"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? ForkName = null
    );

    /// <summary>The response's meta information for paginated results.</summary>
    public record GetCollectionForksMeta(
        /// <value>The pagination cursor that points to the next record in the results set.</value>
        [property: JsonPropertyName("nextCursor")]
            string? NextCursor = null,
        /// <value>The total number of forked collections.</value>
        [property:
            JsonPropertyName("total"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            double? Total = null
    );
}
