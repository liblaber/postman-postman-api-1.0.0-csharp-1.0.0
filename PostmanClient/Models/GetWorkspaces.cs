// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record GetWorkspaces(
    [property:
        JsonPropertyName("workspaces"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<GetWorkspaces.Workspaces>? Workspaces_ = null
)
{
    /// <summary>Information about the workspace.</summary>
    public record Workspaces(
        /// <value>The workspace's ID.</value>
        [property:
            JsonPropertyName("id"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Id = null,
        /// <value>The workspace's name.</value>
        [property:
            JsonPropertyName("name"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Name = null,
        /// <value>The user who created the workspace. The response only returns workspaces that you have access to.</value>
        [property:
            JsonPropertyName("createdBy"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            long? CreatedBy = null,
        /// <value>The type of workspace.</value>
        [property:
            JsonPropertyName("type"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            Workspaces.WorkspacesType? Type_ = null,
        /// <value>
        /// The workspace's visibility. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:
        /// - `personal` — Only you can access the workspace.
        /// - `team` — All team members can access the workspace.
        /// - `private` — Only invited team members can access the workspace ([**Professional** and **Enterprise** plans only](https://www.postman.com/pricing)).
        /// - `public` — Everyone can access the workspace.
        /// - `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([**Professional** and **Enterprise** plans only](https://www.postman.com/pricing)).
        /// </value>
        [property:
            JsonPropertyName("visibility"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            Workspaces.WorkspacesVisibility? Visibility = null
    )
    {
        /// <summary>The type of workspace.</summary>
        public record WorkspacesType : ValueEnum<string>
        {
            internal WorkspacesType(string value)
                : base(value) { }

            public WorkspacesType()
                : base("personal") { }

            public static WorkspacesType Personal = new("personal");
            public static WorkspacesType Team = new("team");
            public static WorkspacesType Private_ = new("private");
            public static WorkspacesType Public_ = new("public");
            public static WorkspacesType Partner = new("partner");
        }

        /// <summary>
        /// The workspace's visibility. [Visibility](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/managing-workspaces/#changing-workspace-visibility) determines who can access the workspace:
        /// - `personal` — Only you can access the workspace.
        /// - `team` — All team members can access the workspace.
        /// - `private` — Only invited team members can access the workspace ([**Professional** and **Enterprise** plans only](https://www.postman.com/pricing)).
        /// - `public` — Everyone can access the workspace.
        /// - `partner` — Only invited team members and [partners](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/partner-workspaces/) can access the workspace ([**Professional** and **Enterprise** plans only](https://www.postman.com/pricing)).
        /// </summary>
        public record WorkspacesVisibility : ValueEnum<string>
        {
            internal WorkspacesVisibility(string value)
                : base(value) { }

            public WorkspacesVisibility()
                : base("personal") { }

            public static WorkspacesVisibility Personal = new("personal");
            public static WorkspacesVisibility Team = new("team");
            public static WorkspacesVisibility Private_ = new("private");
            public static WorkspacesVisibility Public_ = new("public");
            public static WorkspacesVisibility Partner = new("partner");
        }
    }
}
