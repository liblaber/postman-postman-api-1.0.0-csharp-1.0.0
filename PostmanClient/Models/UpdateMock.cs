// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

public record UpdateMock(
    [property:
        JsonPropertyName("mock"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        UpdateMock.UpdateMockMock? Mock = null
)
{
    public record UpdateMockMock(
        /// <value>The mock server's name.</value>
        [property:
            JsonPropertyName("name"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Name = null,
        /// <value>The associated environment's unique ID.</value>
        [property:
            JsonPropertyName("environment"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Environment_ = null,
        /// <value>The mock server's description.</value>
        [property:
            JsonPropertyName("description"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Description = null,
        /// <value>If true, the mock server is set private. By default, mock servers are public and can receive requests from anyone and anywhere.</value>
        [property:
            JsonPropertyName("private"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            bool? Private_ = null,
        /// <value>The API's version tag ID.</value>
        [property:
            JsonPropertyName("versionTag"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? VersionTag = null,
        /// <value>The mock server's configuration settings.</value>
        [property:
            JsonPropertyName("config"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            UpdateMockMock.MockConfig2? Config = null
    )
    {
        /// <summary>The mock server's configuration settings.</summary>
        public record MockConfig2(
            /// <value>
            /// The server response ID. This sets the given server response as the default response for each request.
            ///
            /// To deactivate a server response, pass a null value.
            /// </value>
            [property: JsonPropertyName("serverResponseId")]
                string? ServerResponseId = null
        );
    }
}
