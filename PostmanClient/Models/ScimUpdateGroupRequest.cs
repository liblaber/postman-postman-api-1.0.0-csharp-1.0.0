// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record ScimUpdateGroupRequest(
    /// <value>The [SCIM schema URI](https://www.iana.org/assignments/scim/scim.xhtml).</value>
    [property:
        JsonPropertyName("schemas"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<string>? Schemas = null,
    /// <value>Information about the group update operation.</value>
    [property:
        JsonPropertyName("Operations"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<ScimUpdateGroupRequest.ScimUpdateGroupOperations>? Operations = null
)
{
    public record ScimUpdateGroupOperations(
        /// <value>The operation to perform.</value>
        [property:
            JsonPropertyName("op"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            ScimUpdateGroupOperations.OperationsOp1? Op = null,
        /// <value>The operation's path. Include this value when you update a group's members.</value>
        [property:
            JsonPropertyName("path"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Path = null,
        /// <value>The performed operation's value.</value>
        [property:
            JsonPropertyName("value"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            ScimUpdateGroupOperations.OperationsValue1? Value = null
    )
    {
        /// <summary>The operation to perform.</summary>
        public record OperationsOp1 : ValueEnum<string>
        {
            internal OperationsOp1(string value)
                : base(value) { }

            public OperationsOp1()
                : base("replace") { }

            public static OperationsOp1 Replace = new("replace");
            public static OperationsOp1 Remove = new("remove");
            public static OperationsOp1 Add = new("add");
        }

        /// <summary>The performed operation's value.</summary>
        public record OperationsValue1(
            /// <value>The group's ID.</value>
            [property:
                JsonPropertyName("id"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Id = null,
            /// <value>The group's name.</value>
            [property:
                JsonPropertyName("displayName"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? DisplayName = null
        );
    }
}
