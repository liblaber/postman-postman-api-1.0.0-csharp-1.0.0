// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

/// <summary>Information about the schema.</summary>
public record GetApiSchema1(
    /// <value>The schema's ID.</value>
    [property: JsonPropertyName("id"), JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        string? Id = null,
    /// <value>The schema's type.</value>
    [property:
        JsonPropertyName("type"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? Type_ = null,
    /// <value>Information about the schema's files. The response is paginated and limited to one page.</value>
    [property:
        JsonPropertyName("files"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetApiSchema1.GetApiSchema1Files? Files = null,
    /// <value>The date and time at which the schema was created.</value>
    [property:
        JsonPropertyName("createdAt"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? CreatedAt = null,
    /// <value>The user ID of the user that created the schema.</value>
    [property:
        JsonPropertyName("createdBy"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? CreatedBy = null,
    /// <value>The date and time at which the schema was last updated.</value>
    [property:
        JsonPropertyName("updatedAt"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? UpdatedAt = null,
    /// <value>The user ID of the user that last updated the schema.</value>
    [property:
        JsonPropertyName("updatedBy"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? UpdatedBy = null
)
{
    /// <summary>Information about the schema's files. The response is paginated and limited to one page.</summary>
    public record GetApiSchema1Files(
        /// <value>A list of the schema files.</value>
        [property:
            JsonPropertyName("data"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            List<GetApiSchema1Files.FilesData>? Data = null,
        [property:
            JsonPropertyName("meta"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            GetApiSchema1Files.FilesMeta? Meta = null
    )
    {
        /// <summary>Information about the schema file.</summary>
        public record FilesData(
            /// <value>The schema file's ID.</value>
            [property:
                JsonPropertyName("id"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Id = null,
            /// <value>The schema file's name.</value>
            [property:
                JsonPropertyName("name"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Name = null,
            /// <value>The file system path to the schema file.</value>
            [property:
                JsonPropertyName("path"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Path = null,
            /// <value>The date and time at which the file was created.</value>
            [property:
                JsonPropertyName("createdAt"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? CreatedAt = null,
            /// <value>The user ID of the user that created the file.</value>
            [property:
                JsonPropertyName("createdBy"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? CreatedBy = null,
            /// <value>The date and time at which the file was last updated.</value>
            [property:
                JsonPropertyName("updatedAt"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? UpdatedAt = null,
            /// <value>The user ID of the user that last updated the file.</value>
            [property:
                JsonPropertyName("updatedBy"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? UpdatedBy = null
        );

        public record FilesMeta(
            /// <value>The URL path to the next file.</value>
            [property:
                JsonPropertyName("nextPath"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? NextPath = null
        );
    }
}
