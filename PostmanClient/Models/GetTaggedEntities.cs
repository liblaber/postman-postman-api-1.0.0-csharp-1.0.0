// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record GetTaggedEntities(
    /// <value>An object containing the paginated elements.</value>
    [property:
        JsonPropertyName("data"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetTaggedEntities.GetTaggedEntitiesData? Data = null,
    /// <value>The response's pagination information.</value>
    [property:
        JsonPropertyName("meta"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetTaggedEntities.GetTaggedEntitiesMeta? Meta = null
)
{
    /// <summary>An object containing the paginated elements.</summary>
    public record GetTaggedEntitiesData(
        /// <value>A list of the Postman elements that contain the given tag.</value>
        [property: JsonPropertyName("entities")]
            List<GetTaggedEntitiesData.Entities> Entities_
    )
    {
        public record Entities(
            /// <value>The element's unique ID.</value>
            [property:
                JsonPropertyName("entityId"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? EntityId = null,
            /// <value>The type of Postman element.</value>
            [property:
                JsonPropertyName("entityType"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                Entities.EntitiesEntityType? EntityType = null
        )
        {
            /// <summary>The type of Postman element.</summary>
            public record EntitiesEntityType : ValueEnum<string>
            {
                internal EntitiesEntityType(string value)
                    : base(value) { }

                public EntitiesEntityType()
                    : base("api") { }

                public static EntitiesEntityType Api = new("api");
                public static EntitiesEntityType Collection = new("collection");
                public static EntitiesEntityType Workspace = new("workspace");
            }
        }
    }

    /// <summary>The response's pagination information.</summary>
    public record GetTaggedEntitiesMeta(
        /// <value>The number of tagged elements returned in the response.</value>
        [property: JsonPropertyName("count")]
            long Count,
        /// <value>The pagination cursor that points to the next record in the results set.</value>
        [property:
            JsonPropertyName("nextCursor"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? NextCursor = null
    );
}
