// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

/// <summary>Information about the API version.</summary>
public record CreateApiVersion3(
    /// <value>The version's name.</value>
    [property: JsonPropertyName("name")]
        string Name,
    /// <value>The branch ID.</value>
    [property: JsonPropertyName("branch")]
        string Branch,
    /// <value>A list of the version's schemas.</value>
    [property: JsonPropertyName("schemas")]
        List<CreateApiVersion3.CreateApiVersion3Schemas> Schemas,
    /// <value>A list of the version's collections.</value>
    [property: JsonPropertyName("collections")]
        List<CreateApiVersion3.CreateApiVersion3Collections> Collections,
    /// <value>Information about the API version release. For example, changelog notes.</value>
    [property:
        JsonPropertyName("releaseNotes"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        string? ReleaseNotes = null
)
{
    /// <summary>Information about the schema.</summary>
    public record CreateApiVersion3Schemas(
        /// <value>The path to the root directory where schemas are stored in the Git repository.</value>
        [property:
            JsonPropertyName("directoryPath"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? DirectoryPath = null
    );

    /// <summary>Information about the collection.</summary>
    public record CreateApiVersion3Collections(
        /// <value>The path to the collection in the Git repository.</value>
        [property:
            JsonPropertyName("filePath"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? FilePath = null
    );
}
