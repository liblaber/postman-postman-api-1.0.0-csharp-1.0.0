// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

public record GetApiVersion(
    /// <value>Information about the API version.</value>
    [property:
        JsonPropertyName("version"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetApiVersion.Version? Version_ = null
)
{
    /// <summary>Information about the API version.</summary>
    public record Version(
        /// <value>The version's ID.</value>
        [property:
            JsonPropertyName("id"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Id = null,
        /// <value>The version's name.</value>
        [property:
            JsonPropertyName("name"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Name = null,
        /// <value>The date and time at which the version was created.</value>
        [property:
            JsonPropertyName("createdAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? CreatedAt = null,
        /// <value>The date and time at which the version was last updated.</value>
        [property:
            JsonPropertyName("updatedAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? UpdatedAt = null,
        /// <value>The version's release notes.</value>
        [property:
            JsonPropertyName("releaseNotes"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? ReleaseNotes = null,
        [property:
            JsonPropertyName("schemas"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            List<Version.VersionSchemas>? Schemas = null,
        [property:
            JsonPropertyName("collections"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            List<Version.VersionCollections>? Collections = null
    )
    {
        public record VersionSchemas(
            /// <value>The schema's ID.</value>
            [property:
                JsonPropertyName("id"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Id = null,
            /// <value>The schema type.</value>
            [property:
                JsonPropertyName("type"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Type_ = null
        );

        public record VersionCollections(
            /// <value>The collection's ID.</value>
            [property:
                JsonPropertyName("id"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Id = null,
            /// <value>The collection's name.</value>
            [property:
                JsonPropertyName("type"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                string? Type_ = null
        );
    }
}
