// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record GetSecretTypes(
    [property:
        JsonPropertyName("data"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<GetSecretTypes.GetSecretTypesData>? Data = null,
    [property:
        JsonPropertyName("meta"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetSecretTypes.GetSecretTypesMeta? Meta = null
)
{
    /// <summary>Information about the secret type.</summary>
    public record GetSecretTypesData(
        /// <value>The name of the secret type.</value>
        [property:
            JsonPropertyName("name"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Name = null,
        /// <value>The ID of the secret type.</value>
        [property:
            JsonPropertyName("id"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Id = null,
        /// <value>
        /// The origin of the secret type:
        /// - `DEFAULT` — Supported by default in Postman.
        /// - `TEAM_REGEX` — A custom regex added by an Admin or Super Admin user in the **Configure Alerts** section of the [**Team Settings**](https://learning.postman.com/docs/administration/team-settings/) interface.
        /// </value>
        [property:
            JsonPropertyName("type"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            GetSecretTypesData.DataType? Type_ = null
    )
    {
        /// <summary>
        /// The origin of the secret type:
        /// - `DEFAULT` — Supported by default in Postman.
        /// - `TEAM_REGEX` — A custom regex added by an Admin or Super Admin user in the **Configure Alerts** section of the [**Team Settings**](https://learning.postman.com/docs/administration/team-settings/) interface.
        /// </summary>
        public record DataType : ValueEnum<string>
        {
            internal DataType(string value)
                : base(value) { }

            public DataType()
                : base("DEFAULT") { }

            public static DataType Default_ = new("DEFAULT");
            public static DataType TeamRegex = new("TEAM_REGEX");
        }
    }

    public record GetSecretTypesMeta(
        /// <value>The total number of supported secrets.</value>
        [property:
            JsonPropertyName("total"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            long? Total = null
    );
}
