// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record MergeCollectionForkRequest(
    /// <value>The destination (parent) collection's unique ID.</value>
    [property: JsonPropertyName("destination")]
        string Destination,
    /// <value>The source collection's unique ID.</value>
    [property: JsonPropertyName("source")]
        string Source,
    /// <value>
    /// The fork's merge strategy:
    /// - `deleteSource` — Merge the changes into the parent collection. After the merge process is complete, Postman deletes the fork. You must have Editor access to both the parent and forked collections.
    /// - `updateSourceWithDestination` — Merge the changes into the parent collection. Any differences in the parent collection are also made to the fork.
    /// </value>
    [property:
        JsonPropertyName("strategy"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        MergeCollectionForkRequest.Strategy? Strategy_ = null
)
{
    /// <summary>
    /// The fork's merge strategy:
    /// - `deleteSource` — Merge the changes into the parent collection. After the merge process is complete, Postman deletes the fork. You must have Editor access to both the parent and forked collections.
    /// - `updateSourceWithDestination` — Merge the changes into the parent collection. Any differences in the parent collection are also made to the fork.
    /// </summary>
    public record Strategy : ValueEnum<string>
    {
        internal Strategy(string value)
            : base(value) { }

        public Strategy()
            : base("deleteSource") { }

        public static Strategy DeleteSource = new("deleteSource");
        public static Strategy UpdateSourceWithDestination = new("updateSourceWithDestination");
    }
}
