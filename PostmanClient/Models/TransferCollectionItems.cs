// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record TransferCollectionItems(
    /// <value>A list of collection request, response, or folder UIDs to transfer.</value>
    [property: JsonPropertyName("ids")]
        List<string> Ids,
    /// <value>The transfer operation to perform.</value>
    [property: JsonPropertyName("mode")]
        TransferCollectionItems.Mode Mode_,
    /// <value>Information about the item transfer's destination location.</value>
    [property: JsonPropertyName("target")]
        TransferCollectionItems.Target Target_,
    /// <value>
    /// The transferred items' placement in the target destination:
    /// - For `start` or `end` — Do not include the `model` and `id` values.
    /// - For `before` or `after` — Include the `model` and `id` properties.
    /// </value>
    [property: JsonPropertyName("location")]
        TransferCollectionItems.Location Location_
)
{
    /// <summary>The transfer operation to perform.</summary>
    public record Mode : ValueEnum<string>
    {
        internal Mode(string value)
            : base(value) { }

        public Mode()
            : base("copy") { }

        public static Mode Copy = new("copy");
        public static Mode Move = new("move");
    }

    /// <summary>Information about the item transfer's destination location.</summary>
    public record Target(
        /// <value>The UID of the destination collection, folder, or request.</value>
        [property: JsonPropertyName("id")]
            string Id,
        /// <value>The collection, folder, or request the items will be transferred to. For response transfers, use the `request` value.</value>
        [property: JsonPropertyName("model")]
            Target.TargetModel Model
    )
    {
        /// <summary>The collection, folder, or request the items will be transferred to. For response transfers, use the `request` value.</summary>
        public record TargetModel : ValueEnum<string>
        {
            internal TargetModel(string value)
                : base(value) { }

            public TargetModel()
                : base("collection") { }

            public static TargetModel Collection = new("collection");
            public static TargetModel Folder = new("folder");
            public static TargetModel Request_ = new("request");
        }
    }

    /// <summary>
    /// The transferred items' placement in the target destination:
    /// - For `start` or `end` — Do not include the `model` and `id` values.
    /// - For `before` or `after` — Include the `model` and `id` properties.
    /// </summary>
    public record Location(
        /// <value>The transferred item's position within the destination object.</value>
        [property: JsonPropertyName("position")]
            Location.Position Position_,
        /// <value>For `before` or `after` positions, the model's UID.</value>
        [property: JsonPropertyName("id")]
            string? Id = null,
        /// <value>
        /// For `before` or `after` positions, the type of item (model) that the transferred item will be positioned by. One of: `folder`, `request`, or `response.`
        /// </value>
        [property: JsonPropertyName("model")]
            string? Model = null
    )
    {
        /// <summary>The transferred item's position within the destination object.</summary>
        public record Position : ValueEnum<string>
        {
            internal Position(string value)
                : base(value) { }

            public Position()
                : base("start") { }

            public static Position Start = new("start");
            public static Position End = new("end");
            public static Position Before = new("before");
            public static Position After = new("after");
        }
    }
}
