// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record UpdateScimUserState(
    /// <value>The [SCIM schema URI](https://www.iana.org/assignments/scim/scim.xhtml).</value>
    [property:
        JsonPropertyName("schemas"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<string>? Schemas = null,
    /// <value>Information about the user update operation.</value>
    [property:
        JsonPropertyName("Operations"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<UpdateScimUserState.UpdateScimUserStateOperations>? Operations = null
)
{
    public record UpdateScimUserStateOperations(
        /// <value>The operation to perform.</value>
        [property:
            JsonPropertyName("op"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            UpdateScimUserStateOperations.OperationsOp2? Op = null,
        /// <value>The performed operation's value.</value>
        [property:
            JsonPropertyName("value"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            UpdateScimUserStateOperations.OperationsValue2? Value = null
    )
    {
        /// <summary>The operation to perform.</summary>
        public record OperationsOp2 : ValueEnum<string>
        {
            internal OperationsOp2(string value)
                : base(value) { }

            public OperationsOp2()
                : base("replace") { }

            public static OperationsOp2 Replace = new("replace");
        }

        /// <summary>The performed operation's value.</summary>
        public record OperationsValue2(
            /// <value>
            /// Sets the user's `active` state:
            /// - `true` — Activates the user. This lets them authenticate in to your Postman team.
            /// - `false` — Removes the user from your Postman team and deactivates the account. This blocks the user from authenticating in to Postman.
            /// </value>
            [property:
                JsonPropertyName("active"),
                JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
            ]
                bool? Active = null
        );
    }
}
