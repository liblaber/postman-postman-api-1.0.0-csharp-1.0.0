// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

public record MockCreateUpdate(
    /// <value>Information about the mock server.</value>
    [property:
        JsonPropertyName("mock"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        MockCreateUpdate.MockCreateUpdateMock? Mock = null
)
{
    /// <summary>Information about the mock server.</summary>
    public record MockCreateUpdateMock(
        /// <value>The mock server's ID.</value>
        [property:
            JsonPropertyName("id"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Id = null,
        /// <value>The ID of mock server's owner.</value>
        [property:
            JsonPropertyName("owner"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Owner = null,
        /// <value>The mock server's unique ID.</value>
        [property:
            JsonPropertyName("uid"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Uid = null,
        /// <value>The unique ID of the mock's associated collection.</value>
        [property:
            JsonPropertyName("collection"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Collection = null,
        /// <value>The mock server URL.</value>
        [property:
            JsonPropertyName("mockUrl"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? MockUrl = null,
        /// <value>Information about the mock server's configuration.</value>
        [property:
            JsonPropertyName("config"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            object? Config = null,
        /// <value>The date and time at which the mock server was created.</value>
        [property:
            JsonPropertyName("createdAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? CreatedAt = null,
        /// <value>The date and time at which the mock server was last updated.</value>
        [property:
            JsonPropertyName("updatedAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? UpdatedAt = null,
        /// <value>The unique ID of the mock's associated environment.</value>
        [property:
            JsonPropertyName("environment"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Environment_ = null
    );
}
