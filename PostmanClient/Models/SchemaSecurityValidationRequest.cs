// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;
using PostmanClient.Json;

namespace PostmanClient.Models;

public record SchemaSecurityValidationRequest(
    [property:
        JsonPropertyName("schema"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        SchemaSecurityValidationRequest.SchemaSecurityValidationSchema? Schema = null
)
{
    public record SchemaSecurityValidationSchema(
        /// <value>The definition format.</value>
        [property: JsonPropertyName("language")]
            SchemaSecurityValidationSchema.SchemaLanguage Language,
        /// <value>The stringified API definition.</value>
        [property: JsonPropertyName("schema")]
            string Schema,
        /// <value>The definition type.</value>
        [property: JsonPropertyName("type")]
            SchemaSecurityValidationSchema.SchemaType Type_
    )
    {
        /// <summary>The definition format.</summary>
        public record SchemaLanguage : ValueEnum<string>
        {
            internal SchemaLanguage(string value)
                : base(value) { }

            public SchemaLanguage()
                : base("json") { }

            public static SchemaLanguage Json = new("json");
            public static SchemaLanguage Yaml = new("yaml");
        }

        /// <summary>The definition type.</summary>
        public record SchemaType : ValueEnum<string>
        {
            internal SchemaType(string value)
                : base(value) { }

            public SchemaType()
                : base("openapi3") { }

            public static SchemaType Openapi3 = new("openapi3");
            public static SchemaType Openapi2 = new("openapi2");
        }
    }
}
