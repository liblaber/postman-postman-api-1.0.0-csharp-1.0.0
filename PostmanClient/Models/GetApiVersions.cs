// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

/// <summary>Information about the API's versions.</summary>
public record GetApiVersions(
    /// <value>The response's meta information for paginated results.</value>
    [property:
        JsonPropertyName("meta"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetApiVersions.GetApiVersionsMeta? Meta = null,
    [property:
        JsonPropertyName("versions"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<GetApiVersions.GetApiVersionsVersions>? Versions = null
)
{
    /// <summary>The response's meta information for paginated results.</summary>
    public record GetApiVersionsMeta(
        /// <value>The maximum number of records in the paginated response.</value>
        [property:
            JsonPropertyName("limit"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            long? Limit = null,
        /// <value>The number of records that match the defined criteria.</value>
        [property:
            JsonPropertyName("total"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            long? Total = null,
        /// <value>The pagination cursor that points to the next record in the results set.</value>
        [property:
            JsonPropertyName("nextCursor"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? NextCursor = null
    );

    /// <summary>Information about the API version.</summary>
    public record GetApiVersionsVersions(
        /// <value>The version's ID.</value>
        [property:
            JsonPropertyName("id"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Id = null,
        /// <value>The version's name.</value>
        [property:
            JsonPropertyName("name"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Name = null,
        /// <value>The date and time at which the version was created.</value>
        [property:
            JsonPropertyName("createdAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? CreatedAt = null,
        /// <value>The date and time at which the version was last updated.</value>
        [property:
            JsonPropertyName("updatedAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? UpdatedAt = null,
        /// <value>The version's release notes.</value>
        [property:
            JsonPropertyName("releaseNotes"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? ReleaseNotes = null
    );
}
