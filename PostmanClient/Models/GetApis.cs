// This file was generated by liblab | https://liblab.com/

using System.Text.Json.Serialization;

namespace PostmanClient.Models;

/// <summary>Information about the API schema.</summary>
public record GetApis(
    [property:
        JsonPropertyName("apis"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        List<GetApis.GetApisApis>? Apis = null,
    /// <value>The response's meta information for paginated results.</value>
    [property:
        JsonPropertyName("meta"),
        JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
    ]
        GetApis.GetApisMeta? Meta = null
)
{
    /// <summary>The API's base data schema.</summary>
    public record GetApisApis(
        /// <value>The API's ID.</value>
        [property:
            JsonPropertyName("id"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Id = null,
        /// <value>The API's name.</value>
        [property:
            JsonPropertyName("name"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Name = null,
        /// <value>The API's short summary.</value>
        [property:
            JsonPropertyName("summary"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Summary = null,
        /// <value>The date and time at which the API was created.</value>
        [property:
            JsonPropertyName("createdAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? CreatedAt = null,
        /// <value>The Postman ID of the user that created the API.</value>
        [property:
            JsonPropertyName("createdBy"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            long? CreatedBy = null,
        /// <value>The date and time at which the API was updated.</value>
        [property:
            JsonPropertyName("updatedAt"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? UpdatedAt = null,
        /// <value>The Postman ID of the user that updated the API.</value>
        [property:
            JsonPropertyName("updatedBy"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            long? UpdatedBy = null,
        /// <value>The API's description.</value>
        [property:
            JsonPropertyName("description"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? Description = null
    );

    /// <summary>The response's meta information for paginated results.</summary>
    public record GetApisMeta(
        /// <value>The maximum number of records in the paginated response.</value>
        [property:
            JsonPropertyName("limit"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            double? Limit = null,
        /// <value>The number of records that match the defined criteria.</value>
        [property:
            JsonPropertyName("total"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            double? Total = null,
        /// <value>The pagination cursor that points to the next record in the results set.</value>
        [property:
            JsonPropertyName("nextCursor"),
            JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)
        ]
            string? NextCursor = null
    );
}
